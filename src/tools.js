
function ncodeKeyIndexHandler(ncodeKeyIndex){
    let result = [];
    for (var i=0;i<ncodeKeyIndex.length;i++){
        let temp = [ncodeKeyIndex[i][0],[]];
        for (var j=0;j<ncodeKeyIndex[i][1].length;j++) {
            let end = ncodeKeyIndex[i][1][j][0] + ncodeKeyIndex[i][1][j][1];
            for (var k = ncodeKeyIndex[i][1][j][0]; k < end ;k++)
                temp[1].push(k);
        }
        result.push(temp)
    }
    window.console.log("ncodeKeyIndexHandler:",result)
    return result;
}

function genBlankArray(newncode,ncode){
    var blankArray =[];
    for(var i=0;i< ncode.length;i++)
    {
        var num =newncode[i].indexOf(ncode[i]);
        var blank ="";
        for (var j=0;j<num;j++)
            blank+=" "+"\u00A0"
        blankArray.push(blank)
    }
    return blankArray;
}
function getCodeChip() {
    // let data = "[\"protected void unregisterlistener ( ) {\\n metadataprovider mdp = attributetype . getmetadataprovider ( ) ;\\n if ( mdp != null ) {\\n mdp . removemetadatachangelistener ( this ) ;\\n }\\n }\", \"public static genericpk create ( genericpk value ) {\\n genericpk newpk = new genericpk ( ) ;\\n newpk . init ( value ) ;\\n return newpk ;\\n }\", \"private void writeattribute ( java . lang . string prefix , java . lang . string namespace , java . lang . string attname , java . lang . string attvalue , javax . xml . stream . xmlstreamwriter xmlwriter ) throws javax . xml . stream . xmlstreamexception {\\n if ( xmlwriter . getprefix ( namespace ) == null ) {\\n xmlwriter . writenamespace ( prefix , namespace ) ;\\n xmlwriter . setprefix ( prefix , namespace ) ;\\n }\\n xmlwriter . writeattribute ( namespace , attname , attvalue ) ;\\n }\", \"public void savemovie ( int type ) throws moviesaveexception {\\n currentframe = num_ ;\\n string desc = null ;\\n if ( type == movieinfoprovider . type_quicktime_jpeg ) {\\n createmovformat ( ) ;\\n desc = filetypedescriptor . quicktime ;\\n }\\n else if ( type == movieinfoprovider . type_avi_mjpeg ) {\\n createmjpegformat ( ) ;\\n desc = filetypedescriptor . msvideo ;\\n }\\n else if ( type == movieinfoprovider . type_avi_raw ) {\\n creatergbformat ( ) ;\\n desc = filetypedescriptor . msvideo ;\\n }\\n else throw new unsupportedoperationexception ( str_ ) ;\\n try {\\n itm . savemovie ( mip . getmedialocator ( ) , desc , videoformat ) ;\\n }\\n catch ( exception e ) {\\n throw new moviesaveexception ( e ) ;\\n }\\n }\", \"public shoppingcartitem findcartitem ( string productid , map < string , genericvalue > features , map < string , object > attributes , string prodcatalogid , bigdecimal selectedamount ) {\\n for ( int i = num_ ;\\n i < this . cartlines . size ( ) ;\\n i ++ ) {\\n shoppingcartitem cartitem = cartlines . get ( i ) ;\\n if ( cartitem . equals ( productid , features , attributes , prodcatalogid , selectedamount ) ) {\\n return cartitem ;\\n }\\n }\\n return null ;\\n }\", \"public builder addshard ( indexshardroutingtable refdata , shardrouting shard ) {\\n indexshardroutingtable indexshard = shards . get ( shard . id ( ) ) ;\\n if ( indexshard == null ) {\\n indexshard = new indexshardroutingtable . builder ( refdata . shardid ( ) ) . addshard ( new shardrouting ( shard ) ) . build ( ) ;\\n }\\n else {\\n indexshard = new indexshardroutingtable . builder ( indexshard ) . addshard ( new shardrouting ( shard ) ) . build ( ) ;\\n }\\n shards . put ( indexshard . shardid ( ) . id ( ) , indexshard ) ;\\n return this ;\\n }\", \"public clock logtime ( string message ) {\\n super . split ( ) ;\\n string time = durationformatutils . formatdurationhms ( super . getsplittime ( ) ) ;\\n string msg = message + separator + time ;\\n if ( log != null ) {\\n log . info ( msg ) ;\\n }\\n else {\\n defaultlog . info ( msg ) ;\\n }\\n return this ;\\n }\", \"public void testcrlocationandtimevaluebutnolocation ( ) throws exception {\\n try {\\n new testhelper ( str_ , str_ , str_ , str_ ) . runtest ( ) ;\\n }\\n catch ( exception e ) {\\n asserttrue ( e . tostring ( ) . contains ( geospatialsearchexception . class . getname ( ) ) ) ;\\n return ;\\n }\\n throw new runtimeexception ( str_ ) ;\\n }\", \"private string processfunction ( string value , variables variables ) {\\n string returnvalue = value ;\\n if ( functionhandler . validfunction ( returnvalue ) ) {\\n returnvalue = functionhandler . executefunction ( returnvalue , variables ) ;\\n }\\n return returnvalue != null ? returnvalue : str_ ;\\n }\", \"public static < a , b , c > t3 < list < a > , list < b > , list < c > > unzip3 ( list < t3 < a , b , c > > listabc ) {\\n return t3 . of ( listabc . map ( null ) , listabc . map ( null ) , listabc . map ( null ) ) ;\\n }\"]"
    let data ="{\"res\":[{\"ncode\":[\"protected void unregisterlistener ( ) {\",\" metadataprovider mdp = attributetype . getmetadataprovider ( ) ;\",\" if ( mdp != null ) {\",\" mdp . removemetadatachangelistener ( this ) ;\",\" }\",\" }\"],\"comment\":\"unregister the metadata provider \",\"interpretedComment\":[[\"unregister\",{\"index\":0,\"relation\":[[0,[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]]]}],[\" \",null],[\"the \",null],[\"metadata provider\",{\"index\":1,\"relation\":[[3,[2,3,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34]]]}],[\" \",null]]},{\"ncode\":[\"public static genericpk create ( genericpk value ) {\",\" genericpk newpk = new genericpk ( ) ;\",\" newpk . init ( value ) ;\",\" return newpk ;\",\" }\"],\"comment\":\"creates a new \",\"interpretedComment\":[[\"creates\",{\"index\":0,\"relation\":[[0,[14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,33,34,35,36,37,38,39,40,41,43,44,45,46,47]]]}],[\" \",null],[\"a \",null],[\"new\",{\"index\":1,\"relation\":[[3,[11,12]]]}],[\" \",null]]},{\"ncode\":[\"private void writeattribute ( java . lang . string prefix , java . lang . string namespace , java . lang . string attname , java . lang . string attvalue , javax . xml . stream . xmlstreamwriter xmlwriter ) throws javax . xml . stream . xmlstreamexception {\",\" if ( xmlwriter . getprefix ( namespace ) == null ) {\",\" xmlwriter . writenamespace ( prefix , namespace ) ;\",\" xmlwriter . setprefix ( prefix , namespace ) ;\",\" }\",\" xmlwriter . writeattribute ( namespace , attname , attvalue ) ;\",\" }\"],\"comment\":\"writes the xml attribute value to the xml file \",\"interpretedComment\":[[\"writes\",{\"index\":0,\"relation\":[[0,[13,14,15,16,17,18,19,20,21,22,23,24,25,26,30,31,32,33,37,38,39,40,44,45,46,47,48,49,51,52,53,54,55,56,60,61,62,63,67,68,69,70,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,93,94,95,96,100,101,102,103,107,108,109,110,111,112]]]}],[\" \",null],[\"the \",null],[\"xml attribute value\",{\"index\":1,\"relation\":[[0,[156,157,158,159,160,164,165,166,170,171,172,173,174,175,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254]]]}],[\" \",null],[\"to \",null],[\"the \",null],[\"xml file\",{\"index\":2,\"relation\":[[0,[156,157,158,159,160,164,165,166,170,171,172,173,174,175,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254]]]}],[\" \",null]]},{\"ncode\":[\"public void savemovie ( int type ) throws moviesaveexception {\",\" currentframe = num_ ;\",\" string desc = null ;\",\" if ( type == movieinfoprovider . type_quicktime_jpeg ) {\",\" createmovformat ( ) ;\",\" desc = filetypedescriptor . quicktime ;\",\" }\",\" else if ( type == movieinfoprovider . type_avi_mjpeg ) {\",\" createmjpegformat ( ) ;\",\" desc = filetypedescriptor . msvideo ;\",\" }\",\" else if ( type == movieinfoprovider . type_avi_raw ) {\",\" creatergbformat ( ) ;\",\" desc = filetypedescriptor . msvideo ;\",\" }\",\" else throw new unsupportedoperationexception ( str_ ) ;\",\" try {\",\" itm . savemovie ( mip . getmedialocator ( ) , desc , videoformat ) ;\",\" }\",\" catch ( exception e ) {\",\" throw new moviesaveexception ( e ) ;\",\" }\",\" }\"],\"comment\":\"saves the movie in the database \",\"interpretedComment\":[[\"saves\",{\"index\":0,\"relation\":[[0,[12,13,14,15,16,17,18,19,20,28,29,30,31]]]}],[\" \",null],[\"the \",null],[\"movie\",{\"index\":1,\"relation\":[[0,[12,13,14,15,16,17,18,19,20,28,29,30,31]]]}],[\" \",null],[\"in \",null],[\"the \",null],[\"database\",{\"index\":2,\"relation\":[[13,[1,2,3,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,30,31,32,33,34,35]]]}],[\" \",null]]},{\"ncode\":[\"public shoppingcartitem findcartitem ( string productid , map < string , genericvalue > features , map < string , object > attributes , string prodcatalogid , bigdecimal selectedamount ) {\",\" for ( int i = num_ ;\",\" i < this . cartlines . size ( ) ;\",\" i ++ ) {\",\" shoppingcartitem cartitem = cartlines . get ( i ) ;\",\" if ( cartitem . equals ( productid , features , attributes , prodcatalogid , selectedamount ) ) {\",\" return cartitem ;\",\" }\",\" }\",\" return null ;\",\" }\"],\"comment\":\"find the shopping cart item from the cart \",\"interpretedComment\":[[\"find\",{\"index\":0,\"relation\":[[0,[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,58,59,60,64,65,66,67,68,69,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,91,92,93,94,95,99,100,101,105,106,107,108,109,110,114,115,116,117,118,119,123,124,125,126,127,128,129,130,131,132,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,183]]]}],[\" \",null],[\"the \",null],[\"shopping cart item\",{\"index\":1,\"relation\":[[4,[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,29,30,31,32,33,34,35,36,37,41,42,43]]]}],[\" \",null],[\"from \",null],[\"the \",null],[\"cart\",{\"index\":2,\"relation\":[[0,[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,58,59,60,64,65,66,67,68,69,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,91,92,93,94,95,99,100,101,105,106,107,108,109,110,114,115,116,117,118,119,123,124,125,126,127,128,129,130,131,132,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,183]]]}],[\" \",null]]},{\"ncode\":[\"public builder addshard ( indexshardroutingtable refdata , shardrouting shard ) {\",\" indexshardroutingtable indexshard = shards . get ( shard . id ( ) ) ;\",\" if ( indexshard == null ) {\",\" indexshard = new indexshardroutingtable . builder ( refdata . shardid ( ) ) . addshard ( new shardrouting ( shard ) ) . build ( ) ;\",\" }\",\" else {\",\" indexshard = new indexshardroutingtable . builder ( indexshard ) . addshard ( new shardrouting ( shard ) ) . build ( ) ;\",\" }\",\" shards . put ( indexshard . shardid ( ) . id ( ) , indexshard ) ;\",\" return this ;\",\" }\"],\"comment\":\"adds a new shard to the list at the specified index \",\"interpretedComment\":[[\"adds\",{\"index\":0,\"relation\":[[0,[7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76]]]}],[\" \",null],[\"a \",null],[\"new shard\",{\"index\":1,\"relation\":[[1,[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,39,40,41,42,46,47,48,52,53,54,55,56,60,61]]]}],[\" \",null],[\"to \",null],[\"the \",null],[\"list\",{\"index\":2,\"relation\":[[0,[7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76]]]}],[\" \",null],[\"at \",null],[\"the \",null],[\"specified index\",{\"index\":3,\"relation\":[[8,[34,35,52,53,54,55,56,57,58,59,60,61]]]}],[\" \",null]]},{\"ncode\":[\"public clock logtime ( string message ) {\",\" super . split ( ) ;\",\" string time = durationformatutils . formatdurationhms ( super . getsplittime ( ) ) ;\",\" string msg = message + separator + time ;\",\" if ( log != null ) {\",\" log . info ( msg ) ;\",\" }\",\" else {\",\" defaultlog . info ( msg ) ;\",\" }\",\" return this ;\",\" }\"],\"comment\":\"creates a new clock log object using the specified message \",\"interpretedComment\":[[\"creates\",{\"index\":0,\"relation\":[[0,[7,8,9,10,11,13,14,15,16,17,18,19,23,24,25,26,27,28,30,31,32,33,34,35,36]]]}],[\" \",null],[\"a \",null],[\"new clock log object using\",{\"index\":1,\"relation\":[[8,[8,9,10,14,15,16,17,21,22,23]]]}],[\" \",null],[\"the \",null],[\"specified message\",{\"index\":2,\"relation\":[[3,[1,2,3,4,5,6,8,9,10,14,15,16,17,18,19,20,24,25,26,27,28,29,30,31,32,36,37,38,39]]]}],[\" \",null]]},{\"ncode\":[\"public void testcrlocationandtimevaluebutnolocation ( ) throws exception {\",\" try {\",\" new testhelper ( str_ , str_ , str_ , str_ ) . runtest ( ) ;\",\" }\",\" catch ( exception e ) {\",\" asserttrue ( e . tostring ( ) . contains ( geospatialsearchexception . class . getname ( ) ) ) ;\",\" return ;\",\" }\",\" throw new runtimeexception ( str_ ) ;\",\" }\"],\"comment\":\"test the <UNK> and time value \",\"interpretedComment\":[[\"test\",{\"index\":0,\"relation\":[[0,[12,13,14,15,16,17,18,19,20,21,22,23,24,25]]]}],[\" \",null],[\"the \",null],[\"<UNK\",{\"index\":1,\"relation\":[[0,[18,19,20,21,22,23,24,25]]]}],[\"> \",null],[\"and \",null],[\"time value\",{\"index\":2,\"relation\":[[0,[29,30,31,32,33,34,35,36,37]]]}],[\" \",null]]},{\"ncode\":[\"private string processfunction ( string value , variables variables ) {\",\" string returnvalue = value ;\",\" if ( functionhandler . validfunction ( returnvalue ) ) {\",\" returnvalue = functionhandler . executefunction ( returnvalue , variables ) ;\",\" }\",\" return returnvalue != null ? returnvalue : str_ ;\",\" }\"],\"comment\":\"process the given value \",\"interpretedComment\":[[\"process\",{\"index\":0,\"relation\":[[0,[8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,33,34,35,36,37,38,40,41,42,43,44,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66]]]}],[\" \",null],[\"the \",null],[\"given value\",{\"index\":1,\"relation\":[[3,[7,8,9,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,57,58,59,60,61,65,66,67,68,69,70,71,72,73]]]}],[\" \",null]]},{\"ncode\":[\"public static < a , b , c > t3 < list < a > , list < b > , list < c > > unzip3 ( list < t3 < a , b , c > > listabc ) {\",\" return t3 . of ( listabc . map ( null ) , listabc . map ( null ) , listabc . map ( null ) ) ;\",\" }\"],\"comment\":\"returns a single b \",\"interpretedComment\":[[\"returns\",{\"index\":0,\"relation\":[[1,[18,19,20,21,22,23,24,28,29,30,34,35,36,37,43,44,45,46,47,48,49,53,54,55,59,60,61,62,68,69,70,71,72,73,74,78,79,80,84,85,86,87]]]}],[\" \",null],[\"a \",null],[\"single b\",{\"index\":1,\"relation\":[[0,[2,5,107,108,109,110,111,112,113]]]}],[\" \",null]]}],\"mode\":false,\"i\":0,\"map\":[false,false,false,false,false,false,false,false,false,false]}"
    data = JSON.parse(data)
    // for(var i=0;i<data.length;i++)
    //     data[i] = {ncode:data[i].split('\n')};
    // window.console.log(data)
    return data
}
export  {
    ncodeKeyIndexHandler,
    genBlankArray,
    getCodeChip
}